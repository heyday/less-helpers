// ==========================================================================
// Layout (l)
// ==========================================================================


// The layout file is for high level layout based styles.
// These will largely be the grid and any container styles required.

& {
@import "vars.less";
@import "mixins.less";


// Normalize the CSS.
// ==========================================================================
// Commented code here: https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css
// Documentation here: http://html5boilerplate.com/docs/css/

// HTML5 display definitions
article, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block; }
audio, canvas, video { display: inline-block; *display: inline; *zoom: 1; }
audio:not([controls]) { display: none; }
[hidden] { display: none; }


// Base
// ==========================================================================

html {
	overflow-y: scroll;
}

body {
	margin: 0;
	.clearfix;
}

// apply a natural box layout model to all elements BECAUSE IT'S AWESOME
* { .border-box(); }


// Grid Specific mixins
// ==========================================================================
.column( @col-span ) {
	display: inline;
	float: left;
	width: ( @grid-gutter-width + @grid-column-width ) * @col-span;
}
.push( @col-offset: 1 ) {
	margin-left: ( @grid-gutter-width + @grid-column-width ) * @col-offset;
}
.pull( @col-offset: 1 ) {
	margin-right: ( @grid-gutter-width + @grid-column-width ) * @col-offset;
}



// Grid Specific mixins
// ==========================================================================


// Layout helpers
// You will need to add or remove the ammount of l-col items below based on
// how many columns you have.
//
// Example HTML:
// <div class="l-col-12 l-content">
//   <div class="l-col-8 l-padding">
//     Body content
//   </div>
//   <div class="l-col-4 l-padding">
//     Right side nav
//   </div>
// </div>

// Column Width
// This will set an element to a column, which will define a width
.l-col-1  { .column( 1  ); }
.l-col-2  { .column( 2  ); }
.l-col-3  { .column( 3  ); }
.l-col-4  { .column( 4  ); }
.l-col-5  { .column( 5  ); }
.l-col-6  { .column( 6  ); }
.l-col-7  { .column( 7  ); }
.l-col-8  { .column( 8  ); }
.l-col-9  { .column( 9  ); }
.l-col-10 { .column( 10 ); }
.l-col-11 { .column( 11 ); }
.l-col-12 { .column( 12 ); }

// Column Push
// Push the element x columns from its current position (margin-left)
.l-push-1  { .push( 1  ); }
.l-push-2  { .push( 2  ); }
.l-push-3  { .push( 3  ); }
.l-push-4  { .push( 4  ); }
.l-push-5  { .push( 5  ); }
.l-push-6  { .push( 6  ); }
.l-push-7  { .push( 7  ); }
.l-push-8  { .push( 8  ); }
.l-push-9  { .push( 9  ); }
.l-push-10 { .push( 10 ); }
.l-push-11 { .push( 11 ); }

// Column Pull
// Pull the element x columns from its current position (margin-right)
.l-pull-1  { .pull( 1  ); }
.l-pull-2  { .pull( 2  ); }
.l-pull-3  { .pull( 3  ); }
.l-pull-4  { .pull( 4  ); }
.l-pull-5  { .pull( 5  ); }
.l-pull-6  { .pull( 6  ); }
.l-pull-7  { .pull( 7  ); }
.l-pull-8  { .pull( 8  ); }
.l-pull-9  { .pull( 9  ); }
.l-pull-10 { .pull( 10 ); }
.l-pull-11 { .pull( 11 ); }

// Content holder
// Will center content, block needs a l-col for width
.l-content {
	margin: 0 auto;
	display: block;
	float: none;
}

// Block padding
// Will add default padding based on the grid gutter width
.l-padding {
	padding-left: @grid-gutter-width / 2;
	padding-right: @grid-gutter-width / 2;
}



// END OF SCOPE
}